#!/bin/bash 

#read static variables
inst_root="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
#inst_root=$(dirname $(readlink -f $0))
source $inst_root/a_env_conf


#local variables
user="$USER"
bucket_name=("")
print_help=0
os_project_name=("$OS_PROJECT_NAME")
options=("")
dir_like=0
long_listing=0

#Process command line
while [[ $# -ge 1 ]]
do
  case "$1" in
             '--user' | '-u' )
                  user=("$2")
                  shift
                  shift
                ;;
             '--lh' | '-l' )
                  long_listing=1
                  options=("$options --lh ")
                  shift
                ;;
             '--dir' | '-d' )
                dir_like=(1)
                shift
             ;;

             '--help' | '-h' )
                  print_help=(1)
                  shift
                ;;
             *)
                   if [[ $bucket_name != "" ]]; then
                      echo "unknown option: $1"
                      echo "Bucket name is: $bucket_name"
                      exit 1
                   fi
                   
                   full_name="$1"
                   if [[ ${full_name:(-1)} == "/" ]]; then
                        full_name=${full_name%/}
                   fi
                   bucket_name=$(echo $full_name | awk -F / '{print $1}')
                   #split bucket and object if needed
                   if [[ $bucket_name != $full_name ]]; then
                      prefix_string=$(echo $1 | sed -e s/"${bucket_name}\/"/""/)                      
                      options=("$options -p $prefix_string ") 
                   fi
                   shift                       # No more switches
                ;;
    esac
done

#chek that we have a bucket only
if [ $(echo $bucket_name | grep -o "/" | wc -l) -gt 0 ]; then
  echo ""
  echo "Please give a bucket name, not object name, as an argument for a-list."
  echo "You can use option -p, --prefix, to limit the object listing:"
  echo ""
  echo "  a-list bucket_name --prefix  object_name_prefix"
  echo ""
  exit 1
fi

if [ $print_help -eq 1 ]; then
cat <<EOF
This tool is used to list buckets and objects in Allas. If bucket name is not defined, all buckets are listed. If bucket name is defined, then objects inside the bucket are listed.

   a-list <bucket_name>


Options:

-d  --dir               List content so that  / -characters on object names are used to define a directory structure.

-l, --lh <project_ID>   Print out detaled listing of the bukects or objects in a bucket.

-p                      List only objects startting with the given prefix

Related commands: a-put, a-get, a-delete, a-find

EOF
exit 0
fi 

#Configure rclone
if [ ! -e $HOME/.config/rclone ]
then 
  mkdir -p  $HOME/.config/rclone
fi
if [ -e $HOME/.config/rclone/rclone.conf ]
then 
   rc_check=$(grep -c $storage_server $HOME/.config/rclone/rclone.conf)
   if [ $rc_check -lt 1 ]
   then
      echo '[pouta]' >>  $HOME/.config/rclone/rclone.conf
      echo 'type = swift'  >>  $HOME/.config/rclone/rclone.conf
      echo 'env_auth = true'   >>  $HOME/.config/rclone/rclone.conf
   fi
else
   echo '[pouta]' >>  $HOME/.config/rclone/rclone.conf
   echo 'type = swift'  >>  $HOME/.config/rclone/rclone.conf
   echo 'env_auth = true'   >>  $HOME/.config/rclone/rclone.conf 
fi


# run list command
#Check if connection works

test=$(rclone about ${storage_server}: 2> /dev/null | wc -l)
#test=$(swift stat 2> /dev/null | grep -c "Account:")
if [[ $test -lt 1 ]]
then 
  echo "No connection to Allas!"
  echo "Please try setting the the connection again."
  echo "by running command:"
  echo ""
  echo "   source $allas_conf_path"
  exit 1 
fi

#echo "swift list $options $bucket_name | grep -v '_ameta$'"
if [[ $dir_like -eq 1 ]]; then
  #echo rclone lsf ${storage_server}:${full_name}
  rclone lsf ${storage_server}:${full_name} | grep -v "_ameta$"
  exit 0
fi

if [[ $bucket_name == "" ]]; then
   if [[ $long_listing -eq 0 ]]; then
      rclone lsd ${storage_server}: | awk '{print $NF}'
   else
      rclone lsd ${storage_server}:
   fi
   # swift list $options
else
  #
  # if [[ $long_listing -eq 0 ]]; then
  #   rclone ls ${storage_server}:$full_name  | grep -v "_ameta$" | awk '{print "'$full_name'/" $NF}'
  # else
  #   rclone lsl allas:roska_123/roska | awk '{print $1"\t"$2"\t"$3"\t'$full_name'/" $4}'
  # fi
  swift list $options $bucket_name | tr -cd '\11\12\15\40-\176' | grep -v "_ameta$" | awk '{print "'$bucket_name'/" $0}'
fi 
exit 0

























