#!/usr/bin/env bash
 
# Usage: this_script [-h] [token_to_ask [token_to_authenticate]]
 
# Script to get the issued_at and expires_at times of a token from Allas
# This script requires curl
 
# constants
OS_AUTH_URL='https://pouta.csc.fi:5001/v3/auth/tokens'

if [ ! -e "`/usr/bin/which curl 2>/dev/null`" ]; then
    echo "curl command is missing" >&2
else
    if [ "$1" = "-h" -o $# -gt 2 ]; then
        echo "Usage: $BASH_SOURCE [-h] [token_to_ask [token_to_authenticate]]"
    else
        OS_TOKEN_TO_ASK="$OS_AUTH_TOKEN"
        if [ -n "$1" ]; then
            OS_TOKEN_TO_ASK="$1"
        fi
        OS_TOKEN_TO_AUTH="$OS_AUTH_TOKEN"
        if [ -n "$2" ]; then
            OS_TOKEN_TO_AUTH="$2"
        fi
 
        # authenticate and get return values
        OUT=`curl -s -S -X GET -D - -H "X-Auth-Token: $OS_TOKEN_TO_AUTH" -H "X-Subject-Token: $OS_TOKEN_TO_ASK" "$OS_AUTH_URL" 2>&1`
        CURL_EXIT="$?"
        STATUS=`echo "$OUT" | grep '^HTTP/[0-9|.]* 200 OK' | wc -l | tr -d ' '`
        if [ "$CURL_EXIT" != "0" -o "$STATUS" != "1" ]; then
            echo "FAILED" >&2
            echo "$OUT" | grep -E '^HTTP|{|}|^curl:' >&2
        else
            # echo the values, figure them out with just basic tools without dependency to any json tool
            echo "$OUT"|tr '[},]' '\n'|grep -E 'issued_at|expires_at'
        fi
    fi
fi
